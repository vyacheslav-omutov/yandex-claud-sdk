using System.Text.Json.Serialization;
using Yandex.ID.Enums;

namespace Yandex.ID.Requests.Authorization;

public sealed class YandexAuthorizeRequest(ResponseType responseType, 
    string clientId) : BaseRequest(responseType, clientId)
{
    /// <summary>
    /// Unique ID of the device the token is requested for. To ensure uniqueness, just generate a UUID once and use it
    /// every time a new token is requested from this device.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; set; }
    
    /// <summary>
    /// The name of the device to show users. Up to 100 characters.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("device_name")]
    public string? DeviceName { get; set; }
    
    /// <summary>
    /// A URL to redirect the user to after they grant access to the app. By default, the first Redirect URI specified
    /// in the app settings is used (Platforms → Web services → Redirect URI).
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("redirect_uri")]
    public string? RedirectUri { get; set; }
    
    /// <summary>
    /// A string that explicitly points to the account for which a token is requested. A Yandex account username,
    /// Yandex Mail address, or Yandex Mail for Domain address can be passed in the parameter value.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("login_hint")]
    public string? LoginHint { get; set; }
    
    /// <summary>
    /// A list of permissions that the app needs. Values in the list are space-separated.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("scope")]
    public string? Scope { get; set; }
    
    /// <summary>
    /// Optional permissions are requested in addition to those specified in the scope parameter.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("optional_scope")]
    public string? OptionalScope { get; set; }
    
    /// <summary>
    /// The flag indicating whether permission to access the user's account should be requested every time
    /// (even when the user has already granted access for this app). After receiving this parameter,
    /// Yandex OAuth prompts the user to grant the app access and select a Yandex account.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("force_confirm")]
    public string? ForceConfirm { get; set; }
    
    /// <summary>
    /// The status bar that Yandex OAuth returns without changes. The maximum allowed string length is 1024 characters.
    /// Can be used, for example, to protect against CSRF attacks or identify the user the token is requested for.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("state")]
    public string? State { get; set; }
    
    /// <summary>
    /// The code_verifier version transformed using the code_challenge_method. It's meant for cases when working with
    /// the PKCE extension for protecting transmitted data. The code challenge is generated by the app so that later it
    /// can be verified that the request for a token is coming from the same app as the request for an authorization code.
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("code_challenge")]
    public string? CodeChallenge { get; set; }
    
    /// <summary>
    /// The method of transforming the code_verifier into a code_challenge. Possible values: S256 (preferred) and
    /// plain (for cases where S256 can't be used).
    /// See more: https://yandex.ru/dev/id/doc/en/codes/code-url
    /// </summary>
    [JsonPropertyName("code_challenge_method")]
    public string? CodeChallengeMethod { get; set; }
}